name: Windows cx_Freeze Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      # Install uv (works cross-platform)
      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "0.4.0"   # pin for reproducibility
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install cx_Freeze
          if (Test-Path 'requirements.txt') {
            python -m pip install -r 'requirements.txt'
            uv sync
            uv tool install cx_Freeze
          }
      - name: Build with cx_Freeze
        run: |
          python -m cx_Freeze yapbuddy.py --include-files assets

      # After the cx_Freeze build step
      - name: Normalize cx_Freeze output dir
        shell: pwsh
        run: |
          # find the produced folder under build (e.g. build\exe.win-amd64-3.13)
          $out = Get-ChildItem -Path build -Directory -Filter 'exe.win-*' | Select -ExpandProperty FullName -First 1
          if (-not $out) {
            Write-Error "cx_Freeze output not found under build/ â€” build may have failed."
            exit 1
          }
          # ensure a consistent, known folder name for upload
          $target = Join-Path (Split-Path $out -Parent) 'onedir'
          Remove-Item -Recurse -Force $target -ErrorAction SilentlyContinue
          Move-Item -Path $out -Destination $target
          Write-Host "Normalized output to: $target"
      
      - name: Upload onedir artifact
        uses: actions/upload-artifact@v4
        with:
          name: yapbuddy-onedir
          path: build/onedir
